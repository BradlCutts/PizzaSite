// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PizzaSite.Models;
using System;

namespace PizzaSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180531175753_abc2")]
    partial class abc2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaSite.Models.Crust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Crusts");
                });

            modelBuilder.Entity("PizzaSite.Models.Cut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Cuts");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LongDescription");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemCrust", b =>
                {
                    b.Property<int>("CrustId");

                    b.Property<int>("MenuItemId");

                    b.HasKey("CrustId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemCrusts");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemCut", b =>
                {
                    b.Property<int>("CutId");

                    b.Property<int>("MenuItemId");

                    b.HasKey("CutId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemCuts");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemSauce", b =>
                {
                    b.Property<int>("SauceId");

                    b.Property<int>("MenuItemId");

                    b.HasKey("SauceId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemSuaces");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemTopping", b =>
                {
                    b.Property<int>("ToppingId");

                    b.Property<int>("MenuItemId");

                    b.HasKey("ToppingId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemToppings");
                });

            modelBuilder.Entity("PizzaSite.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Price");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaSite.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CrustId");

                    b.Property<int?>("CutId");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("ShortDescription");

                    b.Property<int?>("SizeId");

                    b.Property<string>("SpecialInstructions");

                    b.Property<string>("Status");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CrustId");

                    b.HasIndex("CutId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItemSauce", b =>
                {
                    b.Property<int>("SauceId");

                    b.Property<int>("OrderItemId");

                    b.HasKey("SauceId", "OrderItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemSauce");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItemTopping", b =>
                {
                    b.Property<int>("ToppingId");

                    b.Property<int>("OrderItemId");

                    b.HasKey("ToppingId", "OrderItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemTopping");
                });

            modelBuilder.Entity("PizzaSite.Models.Sauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("PizzaSite.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MenuItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("PizzaSite.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemCrust", b =>
                {
                    b.HasOne("PizzaSite.Models.Crust", "Crust")
                        .WithMany("MenuItemCrusts")
                        .HasForeignKey("CrustId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemCrusts")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemCut", b =>
                {
                    b.HasOne("PizzaSite.Models.Cut", "Cut")
                        .WithMany("MenuItemCuts")
                        .HasForeignKey("CutId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemCuts")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemSauce", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemSauces")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.Sauce", "Sauce")
                        .WithMany("MenuItemSauces")
                        .HasForeignKey("SauceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItems.MenuItemTopping", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemToppings")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.Topping", "Topping")
                        .WithMany("MenuItemToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.OrderItem", b =>
                {
                    b.HasOne("PizzaSite.Models.Crust", "Crust")
                        .WithMany("OrderItems")
                        .HasForeignKey("CrustId");

                    b.HasOne("PizzaSite.Models.Cut", "Cut")
                        .WithMany("OrderItems")
                        .HasForeignKey("CutId");

                    b.HasOne("PizzaSite.Models.Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("PizzaSite.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItemSauce", b =>
                {
                    b.HasOne("PizzaSite.Models.OrderItem", "OrderItem")
                        .WithMany("OrderItemSauces")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.Sauce", "Sauce")
                        .WithMany("OrderItemSauces")
                        .HasForeignKey("SauceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItemTopping", b =>
                {
                    b.HasOne("PizzaSite.Models.OrderItem", "OrderItem")
                        .WithMany("OrderItemToppings")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaSite.Models.Topping", "Topping")
                        .WithMany("OrderItemToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaSite.Models.Size", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Sizes")
                        .HasForeignKey("MenuItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
