// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PizzaSite.Models;
using System;

namespace PizzaSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180531141123_redo")]
    partial class redo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaSite.Models.Crust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("MenuItemId");

                    b.Property<int?>("OrderItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Crusts");
                });

            modelBuilder.Entity("PizzaSite.Models.Cut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("MenuItemId");

                    b.Property<int?>("OrderItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Cuts");
                });

            modelBuilder.Entity("PizzaSite.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LongDescription");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Price");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("SpecialInstructions");

                    b.Property<string>("Status");

                    b.Property<string>("ThumbnailUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PizzaSite.Models.Sauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("MenuItemId");

                    b.Property<int?>("OrderItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("PizzaSite.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MenuItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("PizzaSite.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("MenuItemId");

                    b.Property<int?>("OrderItemId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("PizzaSite.Models.Crust", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Crusts")
                        .HasForeignKey("MenuItemId");

                    b.HasOne("PizzaSite.Models.Orders.OrderItem")
                        .WithMany("Crusts")
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("PizzaSite.Models.Cut", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Cuts")
                        .HasForeignKey("MenuItemId");

                    b.HasOne("PizzaSite.Models.Orders.OrderItem")
                        .WithMany("Cuts")
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("PizzaSite.Models.Orders.OrderItem", b =>
                {
                    b.HasOne("PizzaSite.Models.Orders.Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("PizzaSite.Models.Sauce", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Sauces")
                        .HasForeignKey("MenuItemId");

                    b.HasOne("PizzaSite.Models.Orders.OrderItem")
                        .WithMany("Sauces")
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("PizzaSite.Models.Size", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Sizes")
                        .HasForeignKey("MenuItemId");
                });

            modelBuilder.Entity("PizzaSite.Models.Topping", b =>
                {
                    b.HasOne("PizzaSite.Models.MenuItem")
                        .WithMany("Toppings")
                        .HasForeignKey("MenuItemId");

                    b.HasOne("PizzaSite.Models.Orders.OrderItem")
                        .WithMany("Toppings")
                        .HasForeignKey("OrderItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
